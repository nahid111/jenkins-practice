pipeline {
    agent any

    // triggers {
    //     githubPush()
    // }
    
    stages {
        stage('Test') {
            steps {
                echo "Testing.."
                sh '''
                cd app
                go test -v
                '''
            }
        }
        stage('Build') {
            steps {
                echo "Building.."
                sh '''
                cd app
                go build server.go
                ls
                '''
            }
        }
    }

    post {
        always {
            // Report build status to GitHub using the GitHub Commit Status API
            script {
                def commitSHA = sh(script: 'git rev-parse HEAD', returnStatus: true).toString().trim()
                def context = 'Jenkins CI'  // Context for the status
                def status = currentBuild.resultIsBetterOrEqualTo('SUCCESS') ? 'SUCCESS' : 'FAILURE'
                def description = "${status} on Jenkins"

                // Set the GitHub commit status
                step([
                    $class: 'GitHubCommitStatusSetter',
                    context: context,
                    repoName: 'nahid111/jenkins-practice',
                    sha1: commitSHA,
                    status: status,
                    description: description,
                ])
            }
        }
    }
}
